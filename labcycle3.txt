PROGRAM 1
#include<stdio.h> #include<conio.h>
int V[50],E[50][50],queue[50],n,visited[50],rear=-1,front=-1; void enqueue(int x)
{
if(front==-1) front=0; rear++; queue[rear]=x; visited[x]=1;

}

int dequeue()
{
int item=queue[front];


if(front==rear)
{
front=-1; rear=-1;
}
else front++;
return item;


}
 
void BFS()
{
int u,v,i; enqueue(0);
while(front!=-1)

{
u=dequeue(); printf("Traversed: %d\n",V[u]);

for(i=0;i<n;i++)
{ if(E[u][i]==1)
{
v=i; if(visited[v]==0) enqueue(v);

}
}
}
}

void main()
{
int i,j,k=1,u,v,m;
printf("Enter the number of vertices"); scanf("%d",&n);
printf("Enter the vertices"); 
for(i=0;i<n;i++)
{
scanf("%d",&V[i]); visited[i]=0;
}
for(i=0;i<n;i++) for(j=0;j<n;j++)

E[i][j]=0;
printf("Enter the number of edges"); scanf("%d",&m);
while(k<=m)
{
printf("Enter the edge %d",k); scanf("%d%d",&u,&v); for(i=0;i<n;i++)
{
if(u==V[i])
{u=i; break;
}
}

for(i=0;i<n;i++)
{
if(v==V[i])
{v=i; break;
}


} E[u][v]=1; k++;
} BFS();
}


PROGRAM 2
#include<stdio.h> #include<conio.h>
int V[50],E[50][50],stack[50],n,visited[50],top=-1;


void push(int x)
{
top++; stack[top]=x;
visited[x]=1;


}
int pop()
{	int item=stack[top]; top--;
return item;


}
void DFS()
{
int u,v,i;
push(0);


while(top!=-1)
{
u=pop();
printf("Traversed: %d\n",V[u]);
 
for(i=0;i<n;i++)
{ if(E[u][i]==1)
{
v=i; if(visited[v]==0) push(v);

}
}
}
}
void main()
{
int i,j,k=1,u,v,m;
printf("Enter the number of vertices"); scanf("%d",&n);
printf("Enter the vertices"); for(i=0;i<n;i++)
{
scanf("%d",&V[i]); visited[i]=0;
}
for(i=0;i<n;i++) for(j=0;j<n;j++) E[i][j]=0;
printf("Enter the number of edges"); scanf("%d",&m);
while(k<=m)
 
{
printf("Enter the edge %d",k); scanf("%d%d",&u,&v); for(i=0;i<n;i++)
{
if(u==V[i])
{u=i; break;
}
}
for(i=0;i<n;i++)
{
if(v==V[i])
{v=i; break;
}


} E[u][v]=1;
E[v][u]=1; k++;
} DFS();


PROGRAM 3
int main(){
int i,j,k,n,a[10][10],indeg[10],flag[10],count=0;

printf("Enter the no of vertices:\n"); scanf("%d",&n);
printf("Enter the adjacency matrix:\n"); for(i=0;i<n;i++){
printf("Enter row %d\n",i+1);
	
for(j=0;j<n;j++)
scanf("%d",&a[i][j]);
}


for(i=0;i<n;i++){ indeg[i]=0; flag[i]=0;
}


for(i=0;i<n;i++)
for(j=0;j<n;j++)
indeg[i]=indeg[i]+a[j][i];

printf("\nThe topological order is:");



	 
while(count<n){ for(k=0;k<n;k++){
if((indeg[k]==0) && (flag[k]==0)){
printf("%d ",(k+1)); flag [k]=1;
}

for(i=0;i<n;i++){ if(a[i][k]==1)
indeg[k]--;
}
}


count++;

}


return 0;
}
